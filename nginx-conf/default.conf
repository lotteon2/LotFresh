server {
    listen 443 ssl;
    server_name lot-fresh.shop www.lot-fresh.shop;
    server_tokens off;
  
    if ($host = 'www.lot-fresh.shop') {
        return 301 https://lot-fresh.shop$request_uri;
    }

	# 매칭안하면 프론트엔드로 보냄.
    location / {
        proxy_pass http://client:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    # auth-service에 대한 요청을 처리.
    location /auth-service/ {
        proxy_pass http://gateway-service:8090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

   # user-service에 대한 요청을 처리. - payment-service
   location /user-service/ {
       proxy_pass http://gateway-service:8090; 
       proxy_set_header Host $host; 
       proxy_set_header X-Real-Ip $remote_addr; 
   }


	# product-service에 대한 요청을 처리. - order-service
   location /product-service/ {
       proxy_pass http://gateway-service:8090; 
       proxy_set_header Host $host; 
       proxy_set_header X-Real-Ip $remote_addr; 
   }


	# order-service에 대한 요청을 처리. - delivery-service
   location /order-service/ {
       proxy_pass http://gateway-service:8090; 
       proxy_set_header Host $host; 
       proxy_set_header X-Real-Ip $remote_addr; 
   }

	# payment-service에 대한 요청을 처리. - delivery-service
   location /payment-service/ {
       proxy_pass http://gateway-service:8090; 
       proxy_set_header Host $host; 
       proxy_set_header X-Real-Ip $remote_addr; 
   }

	# storage-service에 대한 요청을 처리.
   location /storage-service/ {
       proxy_pass http://gateway-service:8090; 
       proxy_set_header Host $host; 
       proxy_set_header X-Real-Ip $remote_addr; 
   }
}